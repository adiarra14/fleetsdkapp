# Spring Boot TCP server with Maxvision SDK integration
FROM maven:3.8-eclipse-temurin-17-alpine AS build

# Cache-busting argument to force rebuild
ARG CACHE_BUST=default
RUN echo "Cache bust: $CACHE_BUST"
RUN echo "Force rebuild TCP server at $(date)"

# Set the working directory
WORKDIR /app

# Copy the POM file and lib directory first to leverage Docker cache
COPY tcp-server-service/pom.xml .
COPY tcp-server-service/lib/ ./lib/

# Install the SDK JAR into local Maven repository
RUN mvn install:install-file \
    -Dfile=./lib/maxvision-edge-protocol-gateway-service-sdk.jar \
    -DgroupId=com.maxvision \
    -DartifactId=maxvision-edge-protocol-gateway-service-sdk \
    -Dversion=1.0.0-SNAPSHOT \
    -Dpackaging=jar \
    -DgeneratePom=true

# Copy the rest of the project source code
COPY tcp-server-service/src ./src/

# Build the application
RUN mvn clean package -DskipTests

# Runtime image
FROM eclipse-temurin:17-jdk-alpine

WORKDIR /app

# Copy the built JAR file
COPY --from=build /app/target/*.jar app.jar

# Copy the lib directory with SDK JAR (needed at runtime)
COPY tcp-server-service/lib/ ./lib/

# Create startup script
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "==== BALISE TCP SERVER: Starting at $(date) ===="' >> /app/start.sh && \
    echo 'echo "==== Directory contents ===="' >> /app/start.sh && \
    echo 'ls -la /app' >> /app/start.sh && \
    echo 'echo "==== Starting Balise TCP Server with SDK Integration ===="' >> /app/start.sh && \
    echo 'java -Dloader.path=/app/lib -jar app.jar &' >> /app/start.sh && \
    echo 'JAVA_PID=$!' >> /app/start.sh && \
    echo 'echo "Balise TCP Server started with PID: $JAVA_PID"' >> /app/start.sh && \
    echo 'sleep 5' >> /app/start.sh && \
    echo 'if kill -0 $JAVA_PID 2>/dev/null; then' >> /app/start.sh && \
    echo '    echo "Balise TCP Server is running successfully"' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '    echo "ERROR: Balise TCP Server failed to start"' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    echo 'echo "Keeping container alive for monitoring"' >> /app/start.sh && \
    echo 'while true; do' >> /app/start.sh && \
    echo '    echo "HEARTBEAT: Balise TCP Server alive at $(date)"' >> /app/start.sh && \
    echo '    if ! kill -0 $JAVA_PID 2>/dev/null; then' >> /app/start.sh && \
    echo '        echo "ERROR: Java process died, restarting..."' >> /app/start.sh && \
    echo '        java -Dloader.path=/app/lib -jar app.jar &' >> /app/start.sh && \
    echo '        JAVA_PID=$!' >> /app/start.sh && \
    echo '    fi' >> /app/start.sh && \
    echo '    sleep 60' >> /app/start.sh && \
    echo 'done' >> /app/start.sh && \
    chmod +x /app/start.sh

# Set Spring profile for TCP server
ENV SPRING_PROFILES_ACTIVE=tcp-server
ENV SERVER_PORT=6060
ENV TCP_SERVER_PORT=6060
ENV JAVA_OPTS="-Xmx256m -Xms128m"

# Expose port
EXPOSE 6060

# Run the application
CMD ["/app/start.sh"]
