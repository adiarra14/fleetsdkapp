# Working Java TCP server using built-in Java capabilities
FROM eclipse-temurin:17-jdk-alpine
WORKDIR /app

# Cache-busting argument to force rebuild
ARG CACHE_BUST=default
RUN echo "Cache bust: $CACHE_BUST"
RUN echo "Force rebuild TCP server at $(date)"

# Copy the SDK JAR file and PostgreSQL driver
COPY tcp-server-service/lib/*.jar /app/lib/

# Download PostgreSQL JDBC driver
RUN wget -O /app/lib/postgresql.jar https://jdbc.postgresql.org/download/postgresql-42.7.2.jar

# Copy the MinimalTcpServer source code
COPY tcp-server-service/src/main/java/com/maxvision/tcpserver/MinimalTcpServer.java /app/

# Compile MinimalTcpServer with PostgreSQL driver in classpath
RUN javac -cp "/app/lib/*" /app/MinimalTcpServer.java


# Create startup script for MinimalTcpServer
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "==== MINIMAL TCP SERVER: Starting at $(date) ===="' >> /app/start.sh && \
    echo 'echo "==== Directory contents ===="' >> /app/start.sh && \
    echo 'ls -la /app' >> /app/start.sh && \
    echo 'echo "==== Starting MinimalTcpServer with Database Integration ===="' >> /app/start.sh && \
    echo 'java -cp "/app/lib/*:/app" MinimalTcpServer &' >> /app/start.sh && \
    echo 'JAVA_PID=$!' >> /app/start.sh && \
    echo 'echo "MinimalTcpServer started with PID: $JAVA_PID"' >> /app/start.sh && \
    echo 'sleep 5' >> /app/start.sh && \
    echo 'if kill -0 $JAVA_PID 2>/dev/null; then' >> /app/start.sh && \
    echo '    echo "MinimalTcpServer is running successfully"' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '    echo "ERROR: MinimalTcpServer failed to start"' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    echo 'echo "Keeping container alive for monitoring"' >> /app/start.sh && \
    echo 'while true; do echo "HEARTBEAT: MinimalTcpServer alive at $(date)"; sleep 60; done' >> /app/start.sh && \
    chmod +x /app/start.sh

# Set Spring profile for TCP server
ENV SPRING_PROFILES_ACTIVE=tcp-server
ENV SERVER_PORT=6060
ENV TCP_SERVER_PORT=6060
ENV JAVA_OPTS="-Xmx256m -Xms128m"

# Expose port
EXPOSE 6060

# Run the application using the wrapper script
CMD ["/app/start.sh"]
