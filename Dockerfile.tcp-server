# Maxvision SDK TCP Server with full SDK integration and database persistence
FROM eclipse-temurin:17-jdk-alpine

# Cache-busting argument to force rebuild
ARG CACHE_BUST=2025-07-21-v2.0
RUN echo "Cache bust: $CACHE_BUST"
RUN echo "Force rebuild Maxvision SDK TCP Server v2.0 at $(date)"

WORKDIR /app

# Copy the SDK JAR and dependencies
COPY tcp-server-service/lib/*.jar /app/lib/

# Download additional required JARs (ignore errors if no internet)
RUN wget -O /app/lib/postgresql.jar https://jdbc.postgresql.org/download/postgresql-42.7.2.jar || echo "PostgreSQL driver download failed, using existing"

# Copy source files for reference
COPY tcp-server-service/src/main/java/ /app/src/main/java/
COPY tcp-server-service/src/main/resources/ /app/src/main/resources/

# Copy the Retry-enhanced SDK TCP server implementation
COPY RetryMaxvisionSdkTcpServer.java /app/RetryMaxvisionSdkTcpServer.java

# Create directories for SDK interfaces
RUN mkdir -p /app/com/maxvision/edge/gateway/lock/netty/handler/model
RUN mkdir -p /app/com/maxvision/edge/gateway/lock/netty

# Copy the SDK interface files
COPY MessageHandler.java /app/com/maxvision/edge/gateway/lock/netty/handler/model/MessageHandler.java
COPY LockProtocolServer.java /app/com/maxvision/edge/gateway/lock/netty/LockProtocolServer.java

# Compile interfaces and classes needed for SDK integration
RUN javac /app/com/maxvision/edge/gateway/lock/netty/handler/model/MessageHandler.java
RUN javac -cp "/app" /app/com/maxvision/edge/gateway/lock/netty/LockProtocolServer.java

# Compile the Retry-enhanced SDK TCP Server with health check and database retry
RUN javac -cp "/app/lib/*:/app" /app/RetryMaxvisionSdkTcpServer.java

# Create startup script for the enhanced TCP server
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "==== MAXVISION SDK TCP SERVER v2.0: Starting at $(date) ===="' >> /app/start.sh && \
    echo 'echo "==== Directory contents ====="' >> /app/start.sh && \
    echo 'ls -la /app' >> /app/start.sh && \
    echo 'echo "==== Lib directory contents ====="' >> /app/start.sh && \
    echo 'ls -la /app/lib' >> /app/start.sh && \
    echo 'echo "==== Starting Retry-enhanced Maxvision SDK TCP Server v2.2 ===="' >> /app/start.sh && \
    echo 'java -cp "/app/lib/*:/app" RetryMaxvisionSdkTcpServer &' >> /app/start.sh && \
    echo 'JAVA_PID=$!' >> /app/start.sh && \
    echo 'echo "Retry-enhanced Maxvision SDK TCP Server started with PID: $JAVA_PID"' >> /app/start.sh && \
    echo 'sleep 10' >> /app/start.sh && \
    echo 'if kill -0 $JAVA_PID 2>/dev/null; then' >> /app/start.sh && \
    echo '    echo "Retry-enhanced Maxvision SDK TCP Server is running successfully"' >> /app/start.sh && \
    echo '    echo "TCP Server should be active on port 6060"' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '    echo "ERROR: Retry-enhanced Maxvision SDK TCP Server failed to start"' >> /app/start.sh && \
    echo '    echo "Checking for compilation errors..."' >> /app/start.sh && \
    echo '    find /app -name "*.class" | head -10' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    echo 'echo "Keeping container alive for monitoring"' >> /app/start.sh && \
    echo 'while true; do' >> /app/start.sh && \
    echo '    echo "HEARTBEAT: Maxvision SDK TCP Server v2.0 alive at $(date)"' >> /app/start.sh && \
    echo '    if ! kill -0 $JAVA_PID 2>/dev/null; then' >> /app/start.sh && \
    echo '        echo "ERROR: Java process died, restarting..."' >> /app/start.sh && \
    echo '        java -cp "/app/lib/*:/app" RetryMaxvisionSdkTcpServer &' >> /app/start.sh && \
    echo '        JAVA_PID=$!' >> /app/start.sh && \
    echo '    fi' >> /app/start.sh && \
    echo '    sleep 60' >> /app/start.sh && \
    echo 'done' >> /app/start.sh && \
    chmod +x /app/start.sh

# Set environment variables
ENV SERVER_PORT=6060
ENV TCP_SERVER_PORT=6060
ENV JAVA_OPTS="-Xmx512m -Xms256m"

# Database connection environment variables
ENV SPRING_DATASOURCE_URL=jdbc:postgresql://balise-postgres:5432/balisedb
ENV SPRING_DATASOURCE_USERNAME=adminbdb
ENV SPRING_DATASOURCE_PASSWORD=To7Z2UCeWTsriPxbADX8

# Expose port
EXPOSE 6060 8080

# Run the enhanced TCP server application
CMD ["/app/start.sh"]
