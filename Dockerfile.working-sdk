FROM eclipse-temurin:17-jdk-alpine

WORKDIR /app

# Install necessary utilities
RUN apk add --no-cache bash curl

# Copy the working SDK server implementation
COPY WorkingMaxvisionSdkServer.java .

# Copy the existing SDK JAR
COPY lib/maxvision-edge-protocol-gateway-service-sdk.jar ./lib/

# Download only essential dependencies that we actually need
RUN mkdir -p /app/lib && \
    curl -o /app/lib/postgresql-42.7.4.jar https://repo1.maven.org/maven2/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar && \
    curl -o /app/lib/jackson-databind-2.13.3.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar && \
    curl -o /app/lib/jackson-core-2.13.3.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar && \
    curl -o /app/lib/jackson-annotations-2.13.3.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar

# Compile the Java application (should work now with minimal dependencies)
RUN javac -cp "/app/lib/*" WorkingMaxvisionSdkServer.java

# Create startup script
RUN echo '#!/bin/bash' > start.sh && \
    echo 'echo "=== WORKING MAXVISION SDK TCP SERVER: Starting at $(date) ==="' >> start.sh && \
    echo 'echo "=== REAL SDK INTEGRATION - NO MOCK ==="' >> start.sh && \
    echo 'java -cp "/app/lib/*:." WorkingMaxvisionSdkServer' >> start.sh && \
    chmod +x start.sh

# Expose ports
EXPOSE 6060 8080

# Start the working SDK server
CMD ["./start.sh"]
