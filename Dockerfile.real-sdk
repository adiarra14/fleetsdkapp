FROM eclipse-temurin:17-jdk-alpine

WORKDIR /app

# Install necessary utilities
RUN apk add --no-cache bash curl

# Copy SDK configuration files
COPY application.yml .
COPY logback-spring.xml .

# Create proper Java package directory structure
RUN mkdir -p com/maxvision/fleet/sdk

# Copy Spring Boot SDK application files to correct package directories
COPY SdkNettyApplication.java com/maxvision/fleet/sdk/
COPY SimpleDiagnosticService.java com/maxvision/fleet/sdk/
COPY LockSettingServiceImpl.java com/maxvision/fleet/sdk/

# Copy the SDK JAR (postgresql will be downloaded)
COPY lib/maxvision-edge-protocol-gateway-service-sdk.jar ./lib/

# Download required dependencies for SDK and Spring Boot
RUN mkdir -p /app/lib && \
    curl -o /app/lib/postgresql-42.7.4.jar https://repo1.maven.org/maven2/org/postgresql/postgresql/42.7.4/postgresql-42.7.4.jar && \
    curl -o /app/lib/lombok-1.18.24.jar https://repo1.maven.org/maven2/org/projectlombok/lombok/1.18.24/lombok-1.18.24.jar && \
    curl -o /app/lib/netty-common-4.1.78.Final.jar https://repo1.maven.org/maven2/io/netty/netty-common/4.1.78.Final/netty-common-4.1.78.Final.jar && \
    curl -o /app/lib/netty-buffer-4.1.78.Final.jar https://repo1.maven.org/maven2/io/netty/netty-buffer/4.1.78.Final/netty-buffer-4.1.78.Final.jar && \
    curl -o /app/lib/netty-transport-4.1.78.Final.jar https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.78.Final/netty-transport-4.1.78.Final.jar && \
    curl -o /app/lib/netty-codec-4.1.78.Final.jar https://repo1.maven.org/maven2/io/netty/netty-codec/4.1.78.Final/netty-codec-4.1.78.Final.jar && \
    curl -o /app/lib/netty-handler-4.1.78.Final.jar https://repo1.maven.org/maven2/io/netty/netty-handler/4.1.78.Final/netty-handler-4.1.78.Final.jar && \
    curl -o /app/lib/caffeine-3.1.8.jar https://repo1.maven.org/maven2/com/github/ben-manes/caffeine/caffeine/3.1.8/caffeine-3.1.8.jar && \
    curl -o /app/lib/hutool-all-5.7.3.jar https://repo1.maven.org/maven2/cn/hutool/hutool-all/5.7.3/hutool-all-5.7.3.jar && \
    curl -o /app/lib/commons-lang3-3.12.0.jar https://repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar && \
    curl -o /app/lib/guava-28.1-jre.jar https://repo1.maven.org/maven2/com/google/guava/guava/28.1-jre/guava-28.1-jre.jar && \
    curl -o /app/lib/spring-boot-starter-2.7.0.jar https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-starter/2.7.0/spring-boot-starter-2.7.0.jar && \
    curl -o /app/lib/spring-boot-2.7.0.jar https://repo1.maven.org/maven2/org/springframework/boot/spring-boot/2.7.0/spring-boot-2.7.0.jar && \
    curl -o /app/lib/spring-boot-autoconfigure-2.7.0.jar https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-autoconfigure/2.7.0/spring-boot-autoconfigure-2.7.0.jar && \
    curl -o /app/lib/spring-context-5.3.21.jar https://repo1.maven.org/maven2/org/springframework/spring-context/5.3.21/spring-context-5.3.21.jar && \
    curl -o /app/lib/spring-core-5.3.21.jar https://repo1.maven.org/maven2/org/springframework/spring-core/5.3.21/spring-core-5.3.21.jar && \
    curl -o /app/lib/spring-beans-5.3.21.jar https://repo1.maven.org/maven2/org/springframework/spring-beans/5.3.21/spring-beans-5.3.21.jar && \
    curl -o /app/lib/spring-jdbc-5.3.21.jar https://repo1.maven.org/maven2/org/springframework/spring-jdbc/5.3.21/spring-jdbc-5.3.21.jar && \
    curl -o /app/lib/spring-tx-5.3.21.jar https://repo1.maven.org/maven2/org/springframework/spring-tx/5.3.21/spring-tx-5.3.21.jar && \
    curl -o /app/lib/spring-aop-5.3.21.jar https://repo1.maven.org/maven2/org/springframework/spring-aop/5.3.21/spring-aop-5.3.21.jar && \
    curl -o /app/lib/spring-expression-5.3.21.jar https://repo1.maven.org/maven2/org/springframework/spring-expression/5.3.21/spring-expression-5.3.21.jar && \
    curl -o /app/lib/jackson-databind-2.13.3.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar && \
    curl -o /app/lib/jackson-core-2.13.3.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar && \
    curl -o /app/lib/jackson-annotations-2.13.3.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar && \
    curl -o /app/lib/commons-logging-1.2.jar https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar && \
    curl -o /app/lib/snakeyaml-1.30.jar https://repo1.maven.org/maven2/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar && \
    curl -o /app/lib/slf4j-api-1.7.36.jar https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar && \
    curl -o /app/lib/logback-classic-1.2.12.jar https://repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar && \
    curl -o /app/lib/logback-core-1.2.12.jar https://repo1.maven.org/maven2/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar

# Create logs directory
RUN mkdir -p /app/logs

# Compile the Spring Boot SDK application with proper classpath
RUN javac -cp "/app/lib/*" com/maxvision/fleet/sdk/*.java

# Create startup script to launch Spring Boot SDK application
RUN echo '#!/bin/bash' > start.sh && \
    echo 'echo "=== STARTING REAL MAXVISION SDK NETTY SERVER ==="' >> start.sh && \
    echo 'echo "=== FULL SDK INTEGRATION - NO MOCK ==="' >> start.sh && \
    echo 'java -cp "/app/lib/*:." com.maxvision.fleet.sdk.SdkNettyApplication' >> start.sh && \
    chmod +x start.sh

# Health check - matches docker-compose.yml configuration
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD nc -z localhost 6060 || exit 1

# Expose ports
EXPOSE 6060 8080

# Start the real SDK server
CMD ["./start.sh"]
