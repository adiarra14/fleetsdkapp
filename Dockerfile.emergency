FROM adiarra/maxvision-enhanced:v1.0

# Emergency rescue deployment
ARG REBUILD_FORCE=emergency-rescue
ARG CACHE_BUST=emergency
RUN echo "ðŸš¨ EMERGENCY RESCUE DEPLOYMENT: $REBUILD_FORCE - $CACHE_BUST"

# Copy ALL source files to app directory
COPY . /app/emergency/

# Copy our main classes to the correct locations
RUN mkdir -p /app/com/maxvision/fleet/sdk/
RUN cp /app/emergency/*.java /app/com/maxvision/fleet/sdk/ 2>/dev/null || true
RUN cp /app/emergency/com/maxvision/edge/gateway/sdk/report/*.java /app/com/maxvision/edge/gateway/sdk/report/ 2>/dev/null || true

# Copy configuration
RUN cp /app/emergency/application.yml /app/application.yml 2>/dev/null || true

# Compile ALL our emergency rescue classes (including root directory)
RUN cd /app && javac -cp "/app/lib/*" *.java 2>/dev/null || echo "Root classes compilation done"
RUN cd /app && javac -cp "/app/lib/*" com/maxvision/fleet/sdk/*.java 2>/dev/null || echo "SDK classes compilation done"

# Create emergency startup script
RUN echo '#!/bin/bash' > /app/emergency-start.sh && \
    echo 'echo "ðŸš¨ EMERGENCY RESCUE SYSTEM STARTING"' >> /app/emergency-start.sh && \
    echo 'echo "ðŸ“¡ Capturing live TY5201-5603DA0C data"' >> /app/emergency-start.sh && \
    echo 'echo "ðŸ’¾ Emergency data rescue active"' >> /app/emergency-start.sh && \
    echo 'java -cp "/app/lib/*:/app" com.maxvision.fleet.sdk.SdkNettyApplication' >> /app/emergency-start.sh && \
    chmod +x /app/emergency-start.sh

# Simple health check (no external dependencies)
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD ps aux | grep java || exit 1

CMD ["/app/emergency-start.sh"]
