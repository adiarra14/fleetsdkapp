# Use Java 17 JDK for building
FROM eclipse-temurin:17-jdk-alpine as builder

# Install Maven and curl
RUN apk add --no-cache maven curl

# Set working directory
WORKDIR /app

# Copy pom.xml first for dependency caching
COPY pom.xml .

# Download dependencies (this layer will be cached)
RUN mvn dependency:go-offline -B || echo "Dependency download completed with warnings"

# Copy source code and lib directory
COPY src ./src
COPY lib ./lib

# Set Maven options for better compatibility
ENV MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=256m"

# Build the application with verbose output and skip tests
RUN mvn clean package -DskipTests -B -X || (echo "Maven build failed, showing logs:" && find . -name "*.log" -exec cat {} \; && exit 1)

# Runtime stage with JRE
FROM eclipse-temurin:17-jre-alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Set working directory
WORKDIR /app

# Copy the built JAR from builder stage
COPY --from=builder /app/target/backend-service-1.0.0-SNAPSHOT.jar app.jar

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the application
ENTRYPOINT ["java", "-jar", "app.jar"]
