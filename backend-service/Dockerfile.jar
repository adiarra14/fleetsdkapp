# Backend Service - Simple Java Server
FROM eclipse-temurin:17-jdk-alpine

# Cache-busting argument
ARG CACHE_BUST=default
RUN echo "Cache bust: $CACHE_BUST"

# Install curl for health checks
RUN apk add --no-cache curl

WORKDIR /app

# Copy SDK JAR and dependencies
COPY lib/*.jar /app/lib/

# Create simple backend server
RUN echo 'import com.sun.net.httpserver.*; \
import java.io.*; \
import java.net.InetSocketAddress; \
import java.util.concurrent.Executors; \
\
public class SimpleBackendServer { \
    public static void main(String[] args) throws IOException { \
        System.out.println("SIMPLE BACKEND SERVER - Starting on port 8080..."); \
        HttpServer server = HttpServer.create(new InetSocketAddress(8080), 0); \
        \
        server.createContext("/health", exchange -> { \
            String response = "{\"status\":\"UP\",\"service\":\"backend\"}"; \
            exchange.getResponseHeaders().set("Content-Type", "application/json"); \
            exchange.sendResponseHeaders(200, response.length()); \
            OutputStream os = exchange.getResponseBody(); \
            os.write(response.getBytes()); \
            os.close(); \
        }); \
        \
        server.createContext("/api", exchange -> { \
            String response = "{\"message\":\"Balise Backend API\",\"version\":\"1.0.0\"}"; \
            exchange.getResponseHeaders().set("Content-Type", "application/json"); \
            exchange.sendResponseHeaders(200, response.length()); \
            OutputStream os = exchange.getResponseBody(); \
            os.write(response.getBytes()); \
            os.close(); \
        }); \
        \
        server.createContext("/", exchange -> { \
            String response = "Balise Backend Service - Ready"; \
            exchange.sendResponseHeaders(200, response.length()); \
            OutputStream os = exchange.getResponseBody(); \
            os.write(response.getBytes()); \
            os.close(); \
        }); \
        \
        server.setExecutor(Executors.newFixedThreadPool(10)); \
        server.start(); \
        System.out.println("SIMPLE BACKEND SERVER - Ready on port 8080"); \
        \
        while (true) { \
            try { Thread.sleep(5000); System.out.println("SIMPLE BACKEND SERVER - Heartbeat"); } \
            catch (InterruptedException e) { break; } \
        } \
    } \
}' > SimpleBackendServer.java

# Compile the simple server
RUN javac SimpleBackendServer.java

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the simple backend server
ENTRYPOINT ["java", "SimpleBackendServer"]
