# Extreme debugging Dockerfile - No Java app, just shell script
FROM alpine:latest
WORKDIR /app

# Cache-busting argument to force rebuild
ARG CACHE_BUST=default
RUN echo "Cache bust: $CACHE_BUST"

# Create directories for debugging
RUN mkdir -p /app/classes/com/maxvision/backend /app/lib

# Create dummy Java class file
RUN echo "dummy class" > /app/classes/com/maxvision/backend/MinimalBackendServer.class

# Create dummy JAR file if needed
RUN touch /app/lib/dummy.jar

# Create extreme debug startup script
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'set -x' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: Starting debug session at $(date) ====" > /dev/stdout' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: Environment variables ====" > /dev/stdout' >> /app/start.sh && \
    echo 'env > /dev/stdout' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: Directory structure ====" > /dev/stdout' >> /app/start.sh && \
    echo 'find /app -type f | sort > /dev/stdout' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: App directory contents ====" > /dev/stdout' >> /app/start.sh && \
    echo 'ls -la /app > /dev/stdout' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: Classes directory contents ====" > /dev/stdout' >> /app/start.sh && \
    echo 'ls -la /app/classes > /dev/stdout' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: Backend directory contents ====" > /dev/stdout' >> /app/start.sh && \
    echo 'ls -la /app/classes/com/maxvision/backend > /dev/stdout' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: Lib directory contents ====" > /dev/stdout' >> /app/start.sh && \
    echo 'ls -la /app/lib > /dev/stdout' >> /app/start.sh && \
    echo 'echo "==== EXTREME DEBUG: Keeping container alive ====" > /dev/stdout' >> /app/start.sh && \
    echo 'while true; do echo "HEARTBEAT: $(date)" > /dev/stdout; sleep 30; done' >> /app/start.sh && \
    chmod +x /app/start.sh

# Set Spring profile for backend
ENV SPRING_PROFILES_ACTIVE=backend
ENV SERVER_PORT=8080
ENV JAVA_OPTS="-Xmx512m -Xms256m"

# Expose the port
EXPOSE 8080

# Run the script to start the application
CMD ["/app/start.sh"]