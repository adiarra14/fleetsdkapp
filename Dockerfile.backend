# Build stage
FROM maven:3.8-eclipse-temurin-17 AS build
WORKDIR /app

# Copy the Maven project files
COPY pom.xml /app/
COPY backend-service /app/backend-service




# Build the application with Maven
RUN mvn clean package -f backend-service/pom.xml

# Runtime stage
FROM eclipse-temurin:17-jre-alpine
WORKDIR /app

# Copy the compiled JAR and SDK library from the build stage
COPY --from=build /app/backend-service/target/*.jar /app/app.jar


# Create enhanced startup script with better logging
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo '# Ensure logs go to stdout/stderr for Portainer visibility' >> /app/start.sh && \
    echo 'exec 1>/dev/stdout 2>/dev/stderr' >> /app/start.sh && \
    echo 'echo "==== PORTAINER-DEBUG: Fleet SDK Backend Service starting at $(date) ====" ' >> /app/start.sh && \
    echo 'echo "==== PORTAINER-DEBUG: Environment variables: ====" ' >> /app/start.sh && \
    echo 'env | grep -v PASSWORD' >> /app/start.sh && \
    echo 'echo "==== PORTAINER-DEBUG: Java version ====" ' >> /app/start.sh && \
    echo 'java -version' >> /app/start.sh && \
    echo 'echo "==== PORTAINER-DEBUG: Starting application ====" ' >> /app/start.sh && \
    echo 'java $JAVA_OPTS -cp /app/app.jar com.maxvision.backend.MinimalBackendServer &' >> /app/start.sh && \
    echo 'JAVA_PID=$!' >> /app/start.sh && \
    echo 'echo "Java process started with PID: $JAVA_PID"' >> /app/start.sh && \
    echo 'sleep 5' >> /app/start.sh && \
    echo 'if ps -p $JAVA_PID > /dev/null; then' >> /app/start.sh && \
    echo '    echo "Java process is still running after 5 seconds"' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '    echo "ERROR: Java process exited within 5 seconds"' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    echo 'echo "Keeping container alive for logs and monitoring"' >> /app/start.sh && \
    echo 'while true; do echo "HEARTBEAT: Backend alive at $(date)"; sleep 60; done' >> /app/start.sh && \
    chmod +x /app/start.sh

# Set Spring profile for backend
ENV SPRING_PROFILES_ACTIVE=backend
ENV SERVER_PORT=8080
ENV JAVA_OPTS="-Xmx512m -Xms256m"

# Expose port
EXPOSE 8080

# Run the application using the wrapper script
CMD ["/app/start.sh"]
