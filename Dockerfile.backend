# Working Java HTTP server using built-in Java capabilities
FROM eclipse-temurin:17-jdk-alpine
WORKDIR /app

# Cache-busting argument to force rebuild
ARG CACHE_BUST=default
RUN echo "Cache bust: $CACHE_BUST"

# Copy the SDK JAR file and PostgreSQL driver
COPY backend-service/lib/*.jar /app/lib/

# Download PostgreSQL JDBC driver
RUN wget -O /app/lib/postgresql.jar https://jdbc.postgresql.org/download/postgresql-42.7.2.jar

# Copy the MinimalBackendServer source code
COPY backend-service/src/main/java/com/maxvision/backend/MinimalBackendServer.java /app/

# Compile MinimalBackendServer with PostgreSQL driver in classpath
RUN javac -cp "/app/lib/*" /app/MinimalBackendServer.java

# Create startup script for MinimalBackendServer
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "==== MINIMAL BACKEND SERVER: Starting at $(date) ===="' >> /app/start.sh && \
    echo 'echo "==== Directory contents ===="' >> /app/start.sh && \
    echo 'ls -la /app' >> /app/start.sh && \
    echo 'echo "==== Starting MinimalBackendServer with Database Integration ===="' >> /app/start.sh && \
    echo 'java -cp "/app/lib/*:/app" MinimalBackendServer &' >> /app/start.sh && \
    echo 'JAVA_PID=$!' >> /app/start.sh && \
    echo 'echo "MinimalBackendServer started with PID: $JAVA_PID"' >> /app/start.sh && \
    echo 'sleep 5' >> /app/start.sh && \
    echo 'if kill -0 $JAVA_PID 2>/dev/null; then' >> /app/start.sh && \
    echo '    echo "MinimalBackendServer is running successfully"' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '    echo "ERROR: MinimalBackendServer failed to start"' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    echo 'echo "Keeping container alive for monitoring"' >> /app/start.sh && \
    echo 'while true; do echo "HEARTBEAT: MinimalBackendServer alive at $(date)"; sleep 60; done' >> /app/start.sh && \
    chmod +x /app/start.sh

# Set Spring profile for backend
ENV SPRING_PROFILES_ACTIVE=backend
ENV SERVER_PORT=8080
ENV JAVA_OPTS="-Xmx512m -Xms256m"

# Expose the port
EXPOSE 8080

# Run the script to start the application
CMD ["/app/start.sh"]